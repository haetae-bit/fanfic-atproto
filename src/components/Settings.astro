---
import themes from "@/lib/themes";
import Dialog from "./Dialog.astro";
---
<Dialog id="settings" title="User preferences">
  <form id="user-settings">
    <fieldset class="fieldset">
      <label for="theme" class="label">Theme</label>
      <select name="theme" id="theme" class="select">
        <option disabled>Choose theme</option>
        {themes.map(theme => (
          <option value={theme}>{theme}</option>
        ))}
      </select>
    </fieldset>

    <fieldset class="fieldset">
      <label for="font-family" class="label">Font family</label>
      <select name="fontFamily" id="font-family" class="select">
        <option value="default">Choose...</option>
        <option value="--font-serif">serif</option>
        <option value="--font-mono">monospaced</option>
        <option value="--font-sans">sans serif</option>
        <option value="--font-dyslexic">dyslexic</option>
      </select>
    </fieldset>

    <fieldset class="fieldset">
      <label for="font-size" class="label">Text size</label>
      <input class="range" type="range" name="fontSize" id="font-size" min="-1" max="2" step="1" value="0" />
    </fieldset>

    <fieldset class="fieldset">
      <label for="line-height" class="label">Line height</label>
      <input class="range" type="range" name="lineHeight" id="line-height" min="1" max="2" step="0.05" value="1" />
    </fieldset>
    
    <fieldset class="fieldset">
      <label for="letter-spacing" class="label">Letter spacing</label>
      <input class="range" type="range" name="letterSpacing" id="letter-spacing" min="0" max="0.1" step="0.01" value="0" />
    </fieldset>

    <fieldset class="fieldset">
      <label for="word-spacing" class="label">Word spacing</label>
      <input class="range" type="range" name="wordSpacing" id="word-spacing" min="0" max="0.5" step="0.01" value="0" />
    </fieldset>

    <div id="test-area" class="mt-4 text-(length:--size) leading-(--line-height) tracking-(--letter-spacing) line-clamp-4">
      <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Asperiores quae dolorum debitis vero nostrum nobis aspernatur ipsam sunt dolorem, eum ut corrupti unde commodi soluta natus repellendus totam animi adipisci.</p>
    </div>

    <!-- reset here? -->
     
    <div class="modal-action">
      <button formmethod="dialog" value="default" class="btn btn-neutral">Cancel</button>
      <button id="confirm-settings" class="btn btn-primary">Save</button>
    </div>
  </form>
</Dialog>

<style>
  #test-area {
    --font: var(--font-sans);
    --size: var(--step-0);
    --letter-spacing: 0em;
    --word-spacing: 0em;
    --line-height: 1.5;

    font-family: var(--font);
    font-size: var(--size);
    letter-spacing: var(--letter-spacing);
    word-spacing: var(--word-spacing);
    line-height: var(--line-height);
  }
</style>

<script>
  const form = document.forms.namedItem("user-settings");
  const inputs = document.querySelectorAll("#user-settings :not(button, label, option)");
  const submitter = document.getElementById("confirm-settings");
  const test = document.getElementById("test-area");

  // on load, grab the preferences from private data

  form?.addEventListener("submit", (e) => {
    const target = e.target as HTMLFormElement;
    if (target.nodeValue === null) return;
    e.preventDefault();
  });

  inputs.forEach((input) => {
    (input as HTMLElement).addEventListener("change", (e) => {
      const target = e.target as HTMLInputElement || HTMLSelectElement;
      switch (target.name) {
        case "theme":
          document.documentElement.dataset.theme = target.value;
        case "fontFamily":
          (target.value !== "default") 
            ? test?.style.setProperty("--font", `var(${target.value})`)
            : test?.style.setProperty("--font", `var(--body)`);
          break;
        case "fontSize":
          test?.style.setProperty("--size", `var(--step-${target.value})`);
          break;
        case "lineHeight":
          test?.style.setProperty("--line-height", target.value);
          break;
        case "letterSpacing":
          test?.style.setProperty("--letter-spacing", `${target.value}em`);
          break;
        case "wordSpacing":
          test?.style.setProperty("--word-spacing", `${target.value}em`);
          break;
        default:
          break;
      }
    });
  });

  submitter?.addEventListener("click", (e) => {
    e.preventDefault();
    const data = new FormData(form!);
    console.table(data);
  });
</script>