---
import { Info, TriangleAlert, Skull } from "@lucide/astro";

interface Props {
  id?: string;
  label: string;
  icon?: "info" | "warning" | "danger";
  title?: string;
  class?: string;
}

const { id, label, icon, title, class: className, ...rest } = Astro.props;
---
<!-- type button needs to be set here, otherwise it doesn't work inside forms -->
<button
  type="button" 
  id={`${id}-trigger`} 
  class:list={[
    "btn",
    "btn-xs", 
    icon && ["btn-circle", "btn-ghost"],
    icon &&
      (icon === "info") ? "text-info" :
      (icon === "warning") ? "text-warning" :
      (icon === "danger") ? "text-error" :
      "text-base-content",
    "popover-btn",
    className
  ]} 
  aria-describedby={id}
  popovertarget={id}
>
  {icon
    ? 
      <div class="icon" aria-label={label}>
        {icon &&
          (icon === "info") ? <Info /> :
          (icon === "warning") ? <TriangleAlert /> :
          (icon === "danger") ? <Skull /> :
          <></>
        }
      </div>
    : <span>{label}</span>
  }
</button>

<div
  {id} 
  class:list={[
    "dropdown",
    "card",
    "bg-base-100",
    "w-72",
    "shadow",
    "popover-content",
    className,
  ]} 
  role="tooltip" {...rest} 
  popover="auto"
>
  <div class="card-body">
    {title && (
      <h3 class="card-title">{title}</h3>
    )}
    
    <slot />
  </div>
</div>

<style define:vars={{ anchor: `--${id}-anchor` }}>
  .popover-btn {
    anchor-name: var(--anchor);
  }

  .popover-content {
    position-anchor: var(--anchor);
    top: calc(anchor(top) - 5em);
    position-try-fallbacks: flip-block, flip-inline;
  }
</style>

<script define:vars={{ id }} is:inline>
  const trigger = document.getElementById(`${id}-trigger`);
  const popover = document.getElementById(id);

  trigger.addEventListener("click", (e) => {
    e.preventDefault();
    popover.togglePopover();
  });
</script>