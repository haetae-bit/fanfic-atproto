---
import Layout from "@/layouts/Layout.astro";
import { actions, isInputError } from "astro:actions";

const loggedInUser = Astro.locals.loggedInUser;

if (!loggedInUser) {
  // put in a thing that tells the user they're not logged in
  return Astro.redirect("/works");
}

const result = Astro.getActionResult(actions.worksActions.addWork);
const errors = isInputError(result?.error) ? result.error.fields : {};

if (result && !result.error) {
  return Astro.redirect(`/works/${result.data.slug}`);
}
---
<Layout skipLink="new-work">
  <main id="new-work">
    <h1>Add a new work</h1>

    <form action={actions.worksActions.addWork} method="post">
      <label for="title">title</label>
      <input 
        type="text" 
        name="title" 
        id="title" 
        aria-describedby="title-error" 
        required 
        transition:persist 
      />
      {errors.title && (
        <div id="title-error">
          {errors.title}
        </div>
      )}

      <label for="tags">add tags</label>
      <input 
        type="text" 
        list="tags-list" 
        name="tags" 
        id="tags" 
        aria-describedby="tags-error" 
        transition:persist 
      />
      <!-- could be cool to fetch tags from a tags server or smth? idk -->
      <datalist id="tags-list">
        <option value="test">here</option>
        <option value="tag2">another</option>
        <option value="tag3">try them all!</option>
      </datalist>
      {errors.tags && (
        <div id="tags-error">
          {errors.tags}
        </div>
      )}

      <label for="content">body</label>
      <!-- replace this with a rich text editor / code editor later -->
      <textarea name="content" id="content" aria-describedby="content-error" transition:persist></textarea>
      {errors.content && (
        <div id="content-error">
          {errors.content}
        </div>
      )}
      
      <label for="publish">Publish to your PDS?</label>
      <input type="checkbox" name="publish" id="publish" />
      
      <button>submit</button>
    </form>

    {result?.error && (
      <div class="error">
        {result.error.message}
      </div>
    )}
  </main>
</Layout>